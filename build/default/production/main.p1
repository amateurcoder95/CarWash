Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"1288 C:\Program Files (x86)\Microchip\xc8\v1.35\include\pic16f877a.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1398
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1459
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"30 LCD.h
[v _InitLCD `(v ~T0 @X0 0 ef ]
"15 I2C.h
[v _InitI2C `(v ~T0 @X0 0 ef ]
"28 DS1307.h
[v _Set_DS1307_RTC_Time `(v ~T0 @X0 0 ef4`uc`uc`uc`uc ]
"30
[v _Set_DS1307_RTC_Date `(v ~T0 @X0 0 ef4`uc`uc`uc`uc ]
"36 LCD.h
[v _DisplayFirstTimeToLCD `(v ~T0 @X0 0 ef1`*uc ]
"29 DS1307.h
[v _Get_DS1307_RTC_Time `(*uc ~T0 @X0 0 ef ]
"14 main.c
[v _displayState1 `(v ~T0 @X0 0 ef ]
"15
[v _displayState2 `(v ~T0 @X0 0 ef ]
"16
[v _displayState3 `(v ~T0 @X0 0 ef ]
"17
[v _displayState4 `(v ~T0 @X0 0 ef ]
"2181 C:\Program Files (x86)\Microchip\xc8\v1.35\include\pic16f877a.h
[s S92 :4 `uc 1 :2 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S92 . PCFG . ADCS2 ADFM ]
"2187
[s S93 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S93 . PCFG0 PCFG1 PCFG2 PCFG3 ]
"2180
[u S91 `S92 1 `S93 1 ]
[n S91 . . . ]
"2194
[v _ADCON1bits `VS91 ~T0 @X0 0 e@159 ]
"1130
[s S47 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :2 `uc 1 ]
[n S47 . ADON . GO_nDONE CHS ADCS ]
"1137
[s S48 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S48 . . GO CHS0 CHS1 CHS2 ADCS0 ADCS1 ]
"1146
[s S49 :2 `uc 1 :1 `uc 1 ]
[n S49 . . nDONE ]
"1150
[s S50 :2 `uc 1 :1 `uc 1 ]
[n S50 . . GO_DONE ]
"1129
[u S46 `S47 1 `S48 1 `S49 1 `S50 1 ]
[n S46 . . . . . ]
"1155
[v _ADCON0bits `VS46 ~T0 @X0 0 e@31 ]
"2389
[v _CHS2 `Vb ~T0 @X0 0 e@253 ]
"2387
[v _CHS1 `Vb ~T0 @X0 0 e@252 ]
"2385
[v _CHS0 `Vb ~T0 @X0 0 e@251 ]
"1118
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"2169
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"33 LCD.h
[v _DisplayTimeToLCD `(v ~T0 @X0 0 ef1`*uc ]
"28
[v _WriteCommandToLCD `(v ~T0 @X0 0 ef1`uc ]
"34
[v _DisplayDateOnLCD `(v ~T0 @X0 0 ef1`*uc ]
"31 DS1307.h
[v _Get_DS1307_RTC_Date `(*uc ~T0 @X0 0 ef ]
"31 LCD.h
[v _WriteStringToLCD `(v ~T0 @X0 0 ef1`*Cuc ]
"35
[v _WriteTempToLCD `(v ~T0 @X0 0 ef1`i ]
"29
[v _WriteDataToLCD `(v ~T0 @X0 0 ef1`uc ]
"2503 C:\Program Files (x86)\Microchip\xc8\v1.35\include\pic16f877a.h
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"2563
[v _RD0 `Vb ~T0 @X0 0 e@64 ]
"2509
[v _RA4 `Vb ~T0 @X0 0 e@44 ]
"32 LCD.h
[v _ClearLCDScreen `(v ~T0 @X0 0 ef ]
"2505 C:\Program Files (x86)\Microchip\xc8\v1.35\include\pic16f877a.h
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"2507
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f877a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.35\include\pic16f877a.h
[; ;pic16f877a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f877a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f877a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f877a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877a.h: 72: typedef union {
[; ;pic16f877a.h: 73: struct {
[; ;pic16f877a.h: 74: unsigned C :1;
[; ;pic16f877a.h: 75: unsigned DC :1;
[; ;pic16f877a.h: 76: unsigned Z :1;
[; ;pic16f877a.h: 77: unsigned nPD :1;
[; ;pic16f877a.h: 78: unsigned nTO :1;
[; ;pic16f877a.h: 79: unsigned RP :2;
[; ;pic16f877a.h: 80: unsigned IRP :1;
[; ;pic16f877a.h: 81: };
[; ;pic16f877a.h: 82: struct {
[; ;pic16f877a.h: 83: unsigned :5;
[; ;pic16f877a.h: 84: unsigned RP0 :1;
[; ;pic16f877a.h: 85: unsigned RP1 :1;
[; ;pic16f877a.h: 86: };
[; ;pic16f877a.h: 87: struct {
[; ;pic16f877a.h: 88: unsigned CARRY :1;
[; ;pic16f877a.h: 89: };
[; ;pic16f877a.h: 90: struct {
[; ;pic16f877a.h: 91: unsigned :2;
[; ;pic16f877a.h: 92: unsigned ZERO :1;
[; ;pic16f877a.h: 93: };
[; ;pic16f877a.h: 94: } STATUSbits_t;
[; ;pic16f877a.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877a.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f877a.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877a.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f877a.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877a.h: 165: typedef union {
[; ;pic16f877a.h: 166: struct {
[; ;pic16f877a.h: 167: unsigned RA0 :1;
[; ;pic16f877a.h: 168: unsigned RA1 :1;
[; ;pic16f877a.h: 169: unsigned RA2 :1;
[; ;pic16f877a.h: 170: unsigned RA3 :1;
[; ;pic16f877a.h: 171: unsigned RA4 :1;
[; ;pic16f877a.h: 172: unsigned RA5 :1;
[; ;pic16f877a.h: 173: };
[; ;pic16f877a.h: 174: } PORTAbits_t;
[; ;pic16f877a.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877a.h: 209: extern volatile unsigned char PORTB @ 0x006;
"211
[; ;pic16f877a.h: 211: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877a.h: 214: typedef union {
[; ;pic16f877a.h: 215: struct {
[; ;pic16f877a.h: 216: unsigned RB0 :1;
[; ;pic16f877a.h: 217: unsigned RB1 :1;
[; ;pic16f877a.h: 218: unsigned RB2 :1;
[; ;pic16f877a.h: 219: unsigned RB3 :1;
[; ;pic16f877a.h: 220: unsigned RB4 :1;
[; ;pic16f877a.h: 221: unsigned RB5 :1;
[; ;pic16f877a.h: 222: unsigned RB6 :1;
[; ;pic16f877a.h: 223: unsigned RB7 :1;
[; ;pic16f877a.h: 224: };
[; ;pic16f877a.h: 225: } PORTBbits_t;
[; ;pic16f877a.h: 226: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877a.h: 270: extern volatile unsigned char PORTC @ 0x007;
"272
[; ;pic16f877a.h: 272: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877a.h: 275: typedef union {
[; ;pic16f877a.h: 276: struct {
[; ;pic16f877a.h: 277: unsigned RC0 :1;
[; ;pic16f877a.h: 278: unsigned RC1 :1;
[; ;pic16f877a.h: 279: unsigned RC2 :1;
[; ;pic16f877a.h: 280: unsigned RC3 :1;
[; ;pic16f877a.h: 281: unsigned RC4 :1;
[; ;pic16f877a.h: 282: unsigned RC5 :1;
[; ;pic16f877a.h: 283: unsigned RC6 :1;
[; ;pic16f877a.h: 284: unsigned RC7 :1;
[; ;pic16f877a.h: 285: };
[; ;pic16f877a.h: 286: } PORTCbits_t;
[; ;pic16f877a.h: 287: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877a.h: 331: extern volatile unsigned char PORTD @ 0x008;
"333
[; ;pic16f877a.h: 333: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877a.h: 336: typedef union {
[; ;pic16f877a.h: 337: struct {
[; ;pic16f877a.h: 338: unsigned RD0 :1;
[; ;pic16f877a.h: 339: unsigned RD1 :1;
[; ;pic16f877a.h: 340: unsigned RD2 :1;
[; ;pic16f877a.h: 341: unsigned RD3 :1;
[; ;pic16f877a.h: 342: unsigned RD4 :1;
[; ;pic16f877a.h: 343: unsigned RD5 :1;
[; ;pic16f877a.h: 344: unsigned RD6 :1;
[; ;pic16f877a.h: 345: unsigned RD7 :1;
[; ;pic16f877a.h: 346: };
[; ;pic16f877a.h: 347: } PORTDbits_t;
[; ;pic16f877a.h: 348: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877a.h: 392: extern volatile unsigned char PORTE @ 0x009;
"394
[; ;pic16f877a.h: 394: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877a.h: 397: typedef union {
[; ;pic16f877a.h: 398: struct {
[; ;pic16f877a.h: 399: unsigned RE0 :1;
[; ;pic16f877a.h: 400: unsigned RE1 :1;
[; ;pic16f877a.h: 401: unsigned RE2 :1;
[; ;pic16f877a.h: 402: };
[; ;pic16f877a.h: 403: } PORTEbits_t;
[; ;pic16f877a.h: 404: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877a.h: 423: extern volatile unsigned char PCLATH @ 0x00A;
"425
[; ;pic16f877a.h: 425: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877a.h: 428: typedef union {
[; ;pic16f877a.h: 429: struct {
[; ;pic16f877a.h: 430: unsigned PCLATH :5;
[; ;pic16f877a.h: 431: };
[; ;pic16f877a.h: 432: } PCLATHbits_t;
[; ;pic16f877a.h: 433: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 442: extern volatile unsigned char INTCON @ 0x00B;
"444
[; ;pic16f877a.h: 444: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877a.h: 447: typedef union {
[; ;pic16f877a.h: 448: struct {
[; ;pic16f877a.h: 449: unsigned RBIF :1;
[; ;pic16f877a.h: 450: unsigned INTF :1;
[; ;pic16f877a.h: 451: unsigned TMR0IF :1;
[; ;pic16f877a.h: 452: unsigned RBIE :1;
[; ;pic16f877a.h: 453: unsigned INTE :1;
[; ;pic16f877a.h: 454: unsigned TMR0IE :1;
[; ;pic16f877a.h: 455: unsigned PEIE :1;
[; ;pic16f877a.h: 456: unsigned GIE :1;
[; ;pic16f877a.h: 457: };
[; ;pic16f877a.h: 458: struct {
[; ;pic16f877a.h: 459: unsigned :2;
[; ;pic16f877a.h: 460: unsigned T0IF :1;
[; ;pic16f877a.h: 461: unsigned :2;
[; ;pic16f877a.h: 462: unsigned T0IE :1;
[; ;pic16f877a.h: 463: };
[; ;pic16f877a.h: 464: } INTCONbits_t;
[; ;pic16f877a.h: 465: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877a.h: 519: extern volatile unsigned char PIR1 @ 0x00C;
"521
[; ;pic16f877a.h: 521: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877a.h: 524: typedef union {
[; ;pic16f877a.h: 525: struct {
[; ;pic16f877a.h: 526: unsigned TMR1IF :1;
[; ;pic16f877a.h: 527: unsigned TMR2IF :1;
[; ;pic16f877a.h: 528: unsigned CCP1IF :1;
[; ;pic16f877a.h: 529: unsigned SSPIF :1;
[; ;pic16f877a.h: 530: unsigned TXIF :1;
[; ;pic16f877a.h: 531: unsigned RCIF :1;
[; ;pic16f877a.h: 532: unsigned ADIF :1;
[; ;pic16f877a.h: 533: unsigned PSPIF :1;
[; ;pic16f877a.h: 534: };
[; ;pic16f877a.h: 535: } PIR1bits_t;
[; ;pic16f877a.h: 536: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877a.h: 580: extern volatile unsigned char PIR2 @ 0x00D;
"582
[; ;pic16f877a.h: 582: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877a.h: 585: typedef union {
[; ;pic16f877a.h: 586: struct {
[; ;pic16f877a.h: 587: unsigned CCP2IF :1;
[; ;pic16f877a.h: 588: unsigned :2;
[; ;pic16f877a.h: 589: unsigned BCLIF :1;
[; ;pic16f877a.h: 590: unsigned EEIF :1;
[; ;pic16f877a.h: 591: unsigned :1;
[; ;pic16f877a.h: 592: unsigned CMIF :1;
[; ;pic16f877a.h: 593: };
[; ;pic16f877a.h: 594: } PIR2bits_t;
[; ;pic16f877a.h: 595: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877a.h: 619: extern volatile unsigned short TMR1 @ 0x00E;
"621
[; ;pic16f877a.h: 621: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877a.h: 625: extern volatile unsigned char TMR1L @ 0x00E;
"627
[; ;pic16f877a.h: 627: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877a.h: 631: extern volatile unsigned char TMR1H @ 0x00F;
"633
[; ;pic16f877a.h: 633: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877a.h: 637: extern volatile unsigned char T1CON @ 0x010;
"639
[; ;pic16f877a.h: 639: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877a.h: 642: typedef union {
[; ;pic16f877a.h: 643: struct {
[; ;pic16f877a.h: 644: unsigned TMR1ON :1;
[; ;pic16f877a.h: 645: unsigned TMR1CS :1;
[; ;pic16f877a.h: 646: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 647: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 648: unsigned T1CKPS :2;
[; ;pic16f877a.h: 649: };
[; ;pic16f877a.h: 650: struct {
[; ;pic16f877a.h: 651: unsigned :2;
[; ;pic16f877a.h: 652: unsigned T1SYNC :1;
[; ;pic16f877a.h: 653: unsigned :1;
[; ;pic16f877a.h: 654: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 655: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 656: };
[; ;pic16f877a.h: 657: struct {
[; ;pic16f877a.h: 658: unsigned :2;
[; ;pic16f877a.h: 659: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 660: };
[; ;pic16f877a.h: 661: } T1CONbits_t;
[; ;pic16f877a.h: 662: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877a.h: 711: extern volatile unsigned char TMR2 @ 0x011;
"713
[; ;pic16f877a.h: 713: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877a.h: 717: extern volatile unsigned char T2CON @ 0x012;
"719
[; ;pic16f877a.h: 719: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877a.h: 722: typedef union {
[; ;pic16f877a.h: 723: struct {
[; ;pic16f877a.h: 724: unsigned T2CKPS :2;
[; ;pic16f877a.h: 725: unsigned TMR2ON :1;
[; ;pic16f877a.h: 726: unsigned TOUTPS :4;
[; ;pic16f877a.h: 727: };
[; ;pic16f877a.h: 728: struct {
[; ;pic16f877a.h: 729: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 730: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 731: unsigned :1;
[; ;pic16f877a.h: 732: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 733: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 734: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 735: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 736: };
[; ;pic16f877a.h: 737: } T2CONbits_t;
[; ;pic16f877a.h: 738: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877a.h: 787: extern volatile unsigned char SSPBUF @ 0x013;
"789
[; ;pic16f877a.h: 789: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877a.h: 793: extern volatile unsigned char SSPCON @ 0x014;
"795
[; ;pic16f877a.h: 795: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877a.h: 798: typedef union {
[; ;pic16f877a.h: 799: struct {
[; ;pic16f877a.h: 800: unsigned SSPM :4;
[; ;pic16f877a.h: 801: unsigned CKP :1;
[; ;pic16f877a.h: 802: unsigned SSPEN :1;
[; ;pic16f877a.h: 803: unsigned SSPOV :1;
[; ;pic16f877a.h: 804: unsigned WCOL :1;
[; ;pic16f877a.h: 805: };
[; ;pic16f877a.h: 806: struct {
[; ;pic16f877a.h: 807: unsigned SSPM0 :1;
[; ;pic16f877a.h: 808: unsigned SSPM1 :1;
[; ;pic16f877a.h: 809: unsigned SSPM2 :1;
[; ;pic16f877a.h: 810: unsigned SSPM3 :1;
[; ;pic16f877a.h: 811: };
[; ;pic16f877a.h: 812: } SSPCONbits_t;
[; ;pic16f877a.h: 813: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877a.h: 862: extern volatile unsigned short CCPR1 @ 0x015;
"864
[; ;pic16f877a.h: 864: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877a.h: 868: extern volatile unsigned char CCPR1L @ 0x015;
"870
[; ;pic16f877a.h: 870: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877a.h: 874: extern volatile unsigned char CCPR1H @ 0x016;
"876
[; ;pic16f877a.h: 876: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877a.h: 880: extern volatile unsigned char CCP1CON @ 0x017;
"882
[; ;pic16f877a.h: 882: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877a.h: 885: typedef union {
[; ;pic16f877a.h: 886: struct {
[; ;pic16f877a.h: 887: unsigned CCP1M :4;
[; ;pic16f877a.h: 888: unsigned CCP1Y :1;
[; ;pic16f877a.h: 889: unsigned CCP1X :1;
[; ;pic16f877a.h: 890: };
[; ;pic16f877a.h: 891: struct {
[; ;pic16f877a.h: 892: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 893: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 894: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 895: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 896: };
[; ;pic16f877a.h: 897: } CCP1CONbits_t;
[; ;pic16f877a.h: 898: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 937: extern volatile unsigned char RCSTA @ 0x018;
"939
[; ;pic16f877a.h: 939: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877a.h: 942: typedef union {
[; ;pic16f877a.h: 943: struct {
[; ;pic16f877a.h: 944: unsigned RX9D :1;
[; ;pic16f877a.h: 945: unsigned OERR :1;
[; ;pic16f877a.h: 946: unsigned FERR :1;
[; ;pic16f877a.h: 947: unsigned ADDEN :1;
[; ;pic16f877a.h: 948: unsigned CREN :1;
[; ;pic16f877a.h: 949: unsigned SREN :1;
[; ;pic16f877a.h: 950: unsigned RX9 :1;
[; ;pic16f877a.h: 951: unsigned SPEN :1;
[; ;pic16f877a.h: 952: };
[; ;pic16f877a.h: 953: struct {
[; ;pic16f877a.h: 954: unsigned RCD8 :1;
[; ;pic16f877a.h: 955: unsigned :5;
[; ;pic16f877a.h: 956: unsigned RC9 :1;
[; ;pic16f877a.h: 957: };
[; ;pic16f877a.h: 958: struct {
[; ;pic16f877a.h: 959: unsigned :6;
[; ;pic16f877a.h: 960: unsigned nRC8 :1;
[; ;pic16f877a.h: 961: };
[; ;pic16f877a.h: 962: struct {
[; ;pic16f877a.h: 963: unsigned :6;
[; ;pic16f877a.h: 964: unsigned RC8_9 :1;
[; ;pic16f877a.h: 965: };
[; ;pic16f877a.h: 966: } RCSTAbits_t;
[; ;pic16f877a.h: 967: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877a.h: 1031: extern volatile unsigned char TXREG @ 0x019;
"1033
[; ;pic16f877a.h: 1033: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877a.h: 1037: extern volatile unsigned char RCREG @ 0x01A;
"1039
[; ;pic16f877a.h: 1039: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877a.h: 1043: extern volatile unsigned short CCPR2 @ 0x01B;
"1045
[; ;pic16f877a.h: 1045: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877a.h: 1049: extern volatile unsigned char CCPR2L @ 0x01B;
"1051
[; ;pic16f877a.h: 1051: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877a.h: 1055: extern volatile unsigned char CCPR2H @ 0x01C;
"1057
[; ;pic16f877a.h: 1057: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877a.h: 1061: extern volatile unsigned char CCP2CON @ 0x01D;
"1063
[; ;pic16f877a.h: 1063: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877a.h: 1066: typedef union {
[; ;pic16f877a.h: 1067: struct {
[; ;pic16f877a.h: 1068: unsigned CCP2M :4;
[; ;pic16f877a.h: 1069: unsigned CCP2Y :1;
[; ;pic16f877a.h: 1070: unsigned CCP2X :1;
[; ;pic16f877a.h: 1071: };
[; ;pic16f877a.h: 1072: struct {
[; ;pic16f877a.h: 1073: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 1074: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 1075: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 1076: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 1077: };
[; ;pic16f877a.h: 1078: } CCP2CONbits_t;
[; ;pic16f877a.h: 1079: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 1118: extern volatile unsigned char ADRESH @ 0x01E;
"1120
[; ;pic16f877a.h: 1120: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877a.h: 1124: extern volatile unsigned char ADCON0 @ 0x01F;
"1126
[; ;pic16f877a.h: 1126: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877a.h: 1129: typedef union {
[; ;pic16f877a.h: 1130: struct {
[; ;pic16f877a.h: 1131: unsigned ADON :1;
[; ;pic16f877a.h: 1132: unsigned :1;
[; ;pic16f877a.h: 1133: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 1134: unsigned CHS :3;
[; ;pic16f877a.h: 1135: unsigned ADCS :2;
[; ;pic16f877a.h: 1136: };
[; ;pic16f877a.h: 1137: struct {
[; ;pic16f877a.h: 1138: unsigned :2;
[; ;pic16f877a.h: 1139: unsigned GO :1;
[; ;pic16f877a.h: 1140: unsigned CHS0 :1;
[; ;pic16f877a.h: 1141: unsigned CHS1 :1;
[; ;pic16f877a.h: 1142: unsigned CHS2 :1;
[; ;pic16f877a.h: 1143: unsigned ADCS0 :1;
[; ;pic16f877a.h: 1144: unsigned ADCS1 :1;
[; ;pic16f877a.h: 1145: };
[; ;pic16f877a.h: 1146: struct {
[; ;pic16f877a.h: 1147: unsigned :2;
[; ;pic16f877a.h: 1148: unsigned nDONE :1;
[; ;pic16f877a.h: 1149: };
[; ;pic16f877a.h: 1150: struct {
[; ;pic16f877a.h: 1151: unsigned :2;
[; ;pic16f877a.h: 1152: unsigned GO_DONE :1;
[; ;pic16f877a.h: 1153: };
[; ;pic16f877a.h: 1154: } ADCON0bits_t;
[; ;pic16f877a.h: 1155: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 1219: extern volatile unsigned char OPTION_REG @ 0x081;
"1221
[; ;pic16f877a.h: 1221: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877a.h: 1224: typedef union {
[; ;pic16f877a.h: 1225: struct {
[; ;pic16f877a.h: 1226: unsigned PS :3;
[; ;pic16f877a.h: 1227: unsigned PSA :1;
[; ;pic16f877a.h: 1228: unsigned T0SE :1;
[; ;pic16f877a.h: 1229: unsigned T0CS :1;
[; ;pic16f877a.h: 1230: unsigned INTEDG :1;
[; ;pic16f877a.h: 1231: unsigned nRBPU :1;
[; ;pic16f877a.h: 1232: };
[; ;pic16f877a.h: 1233: struct {
[; ;pic16f877a.h: 1234: unsigned PS0 :1;
[; ;pic16f877a.h: 1235: unsigned PS1 :1;
[; ;pic16f877a.h: 1236: unsigned PS2 :1;
[; ;pic16f877a.h: 1237: };
[; ;pic16f877a.h: 1238: } OPTION_REGbits_t;
[; ;pic16f877a.h: 1239: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 1288: extern volatile unsigned char TRISA @ 0x085;
"1290
[; ;pic16f877a.h: 1290: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877a.h: 1293: typedef union {
[; ;pic16f877a.h: 1294: struct {
[; ;pic16f877a.h: 1295: unsigned TRISA0 :1;
[; ;pic16f877a.h: 1296: unsigned TRISA1 :1;
[; ;pic16f877a.h: 1297: unsigned TRISA2 :1;
[; ;pic16f877a.h: 1298: unsigned TRISA3 :1;
[; ;pic16f877a.h: 1299: unsigned TRISA4 :1;
[; ;pic16f877a.h: 1300: unsigned TRISA5 :1;
[; ;pic16f877a.h: 1301: };
[; ;pic16f877a.h: 1302: } TRISAbits_t;
[; ;pic16f877a.h: 1303: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877a.h: 1337: extern volatile unsigned char TRISB @ 0x086;
"1339
[; ;pic16f877a.h: 1339: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877a.h: 1342: typedef union {
[; ;pic16f877a.h: 1343: struct {
[; ;pic16f877a.h: 1344: unsigned TRISB0 :1;
[; ;pic16f877a.h: 1345: unsigned TRISB1 :1;
[; ;pic16f877a.h: 1346: unsigned TRISB2 :1;
[; ;pic16f877a.h: 1347: unsigned TRISB3 :1;
[; ;pic16f877a.h: 1348: unsigned TRISB4 :1;
[; ;pic16f877a.h: 1349: unsigned TRISB5 :1;
[; ;pic16f877a.h: 1350: unsigned TRISB6 :1;
[; ;pic16f877a.h: 1351: unsigned TRISB7 :1;
[; ;pic16f877a.h: 1352: };
[; ;pic16f877a.h: 1353: } TRISBbits_t;
[; ;pic16f877a.h: 1354: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877a.h: 1398: extern volatile unsigned char TRISC @ 0x087;
"1400
[; ;pic16f877a.h: 1400: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877a.h: 1403: typedef union {
[; ;pic16f877a.h: 1404: struct {
[; ;pic16f877a.h: 1405: unsigned TRISC0 :1;
[; ;pic16f877a.h: 1406: unsigned TRISC1 :1;
[; ;pic16f877a.h: 1407: unsigned TRISC2 :1;
[; ;pic16f877a.h: 1408: unsigned TRISC3 :1;
[; ;pic16f877a.h: 1409: unsigned TRISC4 :1;
[; ;pic16f877a.h: 1410: unsigned TRISC5 :1;
[; ;pic16f877a.h: 1411: unsigned TRISC6 :1;
[; ;pic16f877a.h: 1412: unsigned TRISC7 :1;
[; ;pic16f877a.h: 1413: };
[; ;pic16f877a.h: 1414: } TRISCbits_t;
[; ;pic16f877a.h: 1415: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877a.h: 1459: extern volatile unsigned char TRISD @ 0x088;
"1461
[; ;pic16f877a.h: 1461: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877a.h: 1464: typedef union {
[; ;pic16f877a.h: 1465: struct {
[; ;pic16f877a.h: 1466: unsigned TRISD0 :1;
[; ;pic16f877a.h: 1467: unsigned TRISD1 :1;
[; ;pic16f877a.h: 1468: unsigned TRISD2 :1;
[; ;pic16f877a.h: 1469: unsigned TRISD3 :1;
[; ;pic16f877a.h: 1470: unsigned TRISD4 :1;
[; ;pic16f877a.h: 1471: unsigned TRISD5 :1;
[; ;pic16f877a.h: 1472: unsigned TRISD6 :1;
[; ;pic16f877a.h: 1473: unsigned TRISD7 :1;
[; ;pic16f877a.h: 1474: };
[; ;pic16f877a.h: 1475: } TRISDbits_t;
[; ;pic16f877a.h: 1476: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877a.h: 1520: extern volatile unsigned char TRISE @ 0x089;
"1522
[; ;pic16f877a.h: 1522: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877a.h: 1525: typedef union {
[; ;pic16f877a.h: 1526: struct {
[; ;pic16f877a.h: 1527: unsigned TRISE0 :1;
[; ;pic16f877a.h: 1528: unsigned TRISE1 :1;
[; ;pic16f877a.h: 1529: unsigned TRISE2 :1;
[; ;pic16f877a.h: 1530: unsigned :1;
[; ;pic16f877a.h: 1531: unsigned PSPMODE :1;
[; ;pic16f877a.h: 1532: unsigned IBOV :1;
[; ;pic16f877a.h: 1533: unsigned OBF :1;
[; ;pic16f877a.h: 1534: unsigned IBF :1;
[; ;pic16f877a.h: 1535: };
[; ;pic16f877a.h: 1536: } TRISEbits_t;
[; ;pic16f877a.h: 1537: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877a.h: 1576: extern volatile unsigned char PIE1 @ 0x08C;
"1578
[; ;pic16f877a.h: 1578: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877a.h: 1581: typedef union {
[; ;pic16f877a.h: 1582: struct {
[; ;pic16f877a.h: 1583: unsigned TMR1IE :1;
[; ;pic16f877a.h: 1584: unsigned TMR2IE :1;
[; ;pic16f877a.h: 1585: unsigned CCP1IE :1;
[; ;pic16f877a.h: 1586: unsigned SSPIE :1;
[; ;pic16f877a.h: 1587: unsigned TXIE :1;
[; ;pic16f877a.h: 1588: unsigned RCIE :1;
[; ;pic16f877a.h: 1589: unsigned ADIE :1;
[; ;pic16f877a.h: 1590: unsigned PSPIE :1;
[; ;pic16f877a.h: 1591: };
[; ;pic16f877a.h: 1592: } PIE1bits_t;
[; ;pic16f877a.h: 1593: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877a.h: 1637: extern volatile unsigned char PIE2 @ 0x08D;
"1639
[; ;pic16f877a.h: 1639: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877a.h: 1642: typedef union {
[; ;pic16f877a.h: 1643: struct {
[; ;pic16f877a.h: 1644: unsigned CCP2IE :1;
[; ;pic16f877a.h: 1645: unsigned :2;
[; ;pic16f877a.h: 1646: unsigned BCLIE :1;
[; ;pic16f877a.h: 1647: unsigned EEIE :1;
[; ;pic16f877a.h: 1648: unsigned :1;
[; ;pic16f877a.h: 1649: unsigned CMIE :1;
[; ;pic16f877a.h: 1650: };
[; ;pic16f877a.h: 1651: } PIE2bits_t;
[; ;pic16f877a.h: 1652: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877a.h: 1676: extern volatile unsigned char PCON @ 0x08E;
"1678
[; ;pic16f877a.h: 1678: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877a.h: 1681: typedef union {
[; ;pic16f877a.h: 1682: struct {
[; ;pic16f877a.h: 1683: unsigned nBOR :1;
[; ;pic16f877a.h: 1684: unsigned nPOR :1;
[; ;pic16f877a.h: 1685: };
[; ;pic16f877a.h: 1686: struct {
[; ;pic16f877a.h: 1687: unsigned nBO :1;
[; ;pic16f877a.h: 1688: };
[; ;pic16f877a.h: 1689: } PCONbits_t;
[; ;pic16f877a.h: 1690: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877a.h: 1709: extern volatile unsigned char SSPCON2 @ 0x091;
"1711
[; ;pic16f877a.h: 1711: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877a.h: 1714: typedef union {
[; ;pic16f877a.h: 1715: struct {
[; ;pic16f877a.h: 1716: unsigned SEN :1;
[; ;pic16f877a.h: 1717: unsigned RSEN :1;
[; ;pic16f877a.h: 1718: unsigned PEN :1;
[; ;pic16f877a.h: 1719: unsigned RCEN :1;
[; ;pic16f877a.h: 1720: unsigned ACKEN :1;
[; ;pic16f877a.h: 1721: unsigned ACKDT :1;
[; ;pic16f877a.h: 1722: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 1723: unsigned GCEN :1;
[; ;pic16f877a.h: 1724: };
[; ;pic16f877a.h: 1725: } SSPCON2bits_t;
[; ;pic16f877a.h: 1726: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 1770: extern volatile unsigned char PR2 @ 0x092;
"1772
[; ;pic16f877a.h: 1772: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877a.h: 1776: extern volatile unsigned char SSPADD @ 0x093;
"1778
[; ;pic16f877a.h: 1778: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877a.h: 1782: extern volatile unsigned char SSPSTAT @ 0x094;
"1784
[; ;pic16f877a.h: 1784: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877a.h: 1787: typedef union {
[; ;pic16f877a.h: 1788: struct {
[; ;pic16f877a.h: 1789: unsigned BF :1;
[; ;pic16f877a.h: 1790: unsigned UA :1;
[; ;pic16f877a.h: 1791: unsigned R_nW :1;
[; ;pic16f877a.h: 1792: unsigned S :1;
[; ;pic16f877a.h: 1793: unsigned P :1;
[; ;pic16f877a.h: 1794: unsigned D_nA :1;
[; ;pic16f877a.h: 1795: unsigned CKE :1;
[; ;pic16f877a.h: 1796: unsigned SMP :1;
[; ;pic16f877a.h: 1797: };
[; ;pic16f877a.h: 1798: struct {
[; ;pic16f877a.h: 1799: unsigned :2;
[; ;pic16f877a.h: 1800: unsigned R :1;
[; ;pic16f877a.h: 1801: unsigned :2;
[; ;pic16f877a.h: 1802: unsigned D :1;
[; ;pic16f877a.h: 1803: };
[; ;pic16f877a.h: 1804: struct {
[; ;pic16f877a.h: 1805: unsigned :2;
[; ;pic16f877a.h: 1806: unsigned I2C_READ :1;
[; ;pic16f877a.h: 1807: unsigned I2C_START :1;
[; ;pic16f877a.h: 1808: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 1809: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 1810: };
[; ;pic16f877a.h: 1811: struct {
[; ;pic16f877a.h: 1812: unsigned :2;
[; ;pic16f877a.h: 1813: unsigned nW :1;
[; ;pic16f877a.h: 1814: unsigned :2;
[; ;pic16f877a.h: 1815: unsigned nA :1;
[; ;pic16f877a.h: 1816: };
[; ;pic16f877a.h: 1817: struct {
[; ;pic16f877a.h: 1818: unsigned :2;
[; ;pic16f877a.h: 1819: unsigned nWRITE :1;
[; ;pic16f877a.h: 1820: unsigned :2;
[; ;pic16f877a.h: 1821: unsigned nADDRESS :1;
[; ;pic16f877a.h: 1822: };
[; ;pic16f877a.h: 1823: struct {
[; ;pic16f877a.h: 1824: unsigned :2;
[; ;pic16f877a.h: 1825: unsigned R_W :1;
[; ;pic16f877a.h: 1826: unsigned :2;
[; ;pic16f877a.h: 1827: unsigned D_A :1;
[; ;pic16f877a.h: 1828: };
[; ;pic16f877a.h: 1829: struct {
[; ;pic16f877a.h: 1830: unsigned :2;
[; ;pic16f877a.h: 1831: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 1832: unsigned :2;
[; ;pic16f877a.h: 1833: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 1834: };
[; ;pic16f877a.h: 1835: } SSPSTATbits_t;
[; ;pic16f877a.h: 1836: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 1950: extern volatile unsigned char TXSTA @ 0x098;
"1952
[; ;pic16f877a.h: 1952: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877a.h: 1955: typedef union {
[; ;pic16f877a.h: 1956: struct {
[; ;pic16f877a.h: 1957: unsigned TX9D :1;
[; ;pic16f877a.h: 1958: unsigned TRMT :1;
[; ;pic16f877a.h: 1959: unsigned BRGH :1;
[; ;pic16f877a.h: 1960: unsigned :1;
[; ;pic16f877a.h: 1961: unsigned SYNC :1;
[; ;pic16f877a.h: 1962: unsigned TXEN :1;
[; ;pic16f877a.h: 1963: unsigned TX9 :1;
[; ;pic16f877a.h: 1964: unsigned CSRC :1;
[; ;pic16f877a.h: 1965: };
[; ;pic16f877a.h: 1966: struct {
[; ;pic16f877a.h: 1967: unsigned TXD8 :1;
[; ;pic16f877a.h: 1968: unsigned :5;
[; ;pic16f877a.h: 1969: unsigned nTX8 :1;
[; ;pic16f877a.h: 1970: };
[; ;pic16f877a.h: 1971: struct {
[; ;pic16f877a.h: 1972: unsigned :6;
[; ;pic16f877a.h: 1973: unsigned TX8_9 :1;
[; ;pic16f877a.h: 1974: };
[; ;pic16f877a.h: 1975: } TXSTAbits_t;
[; ;pic16f877a.h: 1976: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877a.h: 2030: extern volatile unsigned char SPBRG @ 0x099;
"2032
[; ;pic16f877a.h: 2032: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877a.h: 2036: extern volatile unsigned char CMCON @ 0x09C;
"2038
[; ;pic16f877a.h: 2038: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f877a.h: 2041: typedef union {
[; ;pic16f877a.h: 2042: struct {
[; ;pic16f877a.h: 2043: unsigned CM :3;
[; ;pic16f877a.h: 2044: unsigned CIS :1;
[; ;pic16f877a.h: 2045: unsigned C1INV :1;
[; ;pic16f877a.h: 2046: unsigned C2INV :1;
[; ;pic16f877a.h: 2047: unsigned C1OUT :1;
[; ;pic16f877a.h: 2048: unsigned C2OUT :1;
[; ;pic16f877a.h: 2049: };
[; ;pic16f877a.h: 2050: struct {
[; ;pic16f877a.h: 2051: unsigned CM0 :1;
[; ;pic16f877a.h: 2052: unsigned CM1 :1;
[; ;pic16f877a.h: 2053: unsigned CM2 :1;
[; ;pic16f877a.h: 2054: };
[; ;pic16f877a.h: 2055: } CMCONbits_t;
[; ;pic16f877a.h: 2056: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f877a.h: 2105: extern volatile unsigned char CVRCON @ 0x09D;
"2107
[; ;pic16f877a.h: 2107: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f877a.h: 2110: typedef union {
[; ;pic16f877a.h: 2111: struct {
[; ;pic16f877a.h: 2112: unsigned CVR :4;
[; ;pic16f877a.h: 2113: unsigned :1;
[; ;pic16f877a.h: 2114: unsigned CVRR :1;
[; ;pic16f877a.h: 2115: unsigned CVROE :1;
[; ;pic16f877a.h: 2116: unsigned CVREN :1;
[; ;pic16f877a.h: 2117: };
[; ;pic16f877a.h: 2118: struct {
[; ;pic16f877a.h: 2119: unsigned CVR0 :1;
[; ;pic16f877a.h: 2120: unsigned CVR1 :1;
[; ;pic16f877a.h: 2121: unsigned CVR2 :1;
[; ;pic16f877a.h: 2122: unsigned CVR3 :1;
[; ;pic16f877a.h: 2123: };
[; ;pic16f877a.h: 2124: } CVRCONbits_t;
[; ;pic16f877a.h: 2125: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 2169: extern volatile unsigned char ADRESL @ 0x09E;
"2171
[; ;pic16f877a.h: 2171: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877a.h: 2175: extern volatile unsigned char ADCON1 @ 0x09F;
"2177
[; ;pic16f877a.h: 2177: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877a.h: 2180: typedef union {
[; ;pic16f877a.h: 2181: struct {
[; ;pic16f877a.h: 2182: unsigned PCFG :4;
[; ;pic16f877a.h: 2183: unsigned :2;
[; ;pic16f877a.h: 2184: unsigned ADCS2 :1;
[; ;pic16f877a.h: 2185: unsigned ADFM :1;
[; ;pic16f877a.h: 2186: };
[; ;pic16f877a.h: 2187: struct {
[; ;pic16f877a.h: 2188: unsigned PCFG0 :1;
[; ;pic16f877a.h: 2189: unsigned PCFG1 :1;
[; ;pic16f877a.h: 2190: unsigned PCFG2 :1;
[; ;pic16f877a.h: 2191: unsigned PCFG3 :1;
[; ;pic16f877a.h: 2192: };
[; ;pic16f877a.h: 2193: } ADCON1bits_t;
[; ;pic16f877a.h: 2194: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 2233: extern volatile unsigned char EEDATA @ 0x10C;
"2235
[; ;pic16f877a.h: 2235: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877a.h: 2239: extern volatile unsigned char EEADR @ 0x10D;
"2241
[; ;pic16f877a.h: 2241: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877a.h: 2245: extern volatile unsigned char EEDATH @ 0x10E;
"2247
[; ;pic16f877a.h: 2247: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877a.h: 2251: extern volatile unsigned char EEADRH @ 0x10F;
"2253
[; ;pic16f877a.h: 2253: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877a.h: 2257: extern volatile unsigned char EECON1 @ 0x18C;
"2259
[; ;pic16f877a.h: 2259: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877a.h: 2262: typedef union {
[; ;pic16f877a.h: 2263: struct {
[; ;pic16f877a.h: 2264: unsigned RD :1;
[; ;pic16f877a.h: 2265: unsigned WR :1;
[; ;pic16f877a.h: 2266: unsigned WREN :1;
[; ;pic16f877a.h: 2267: unsigned WRERR :1;
[; ;pic16f877a.h: 2268: unsigned :3;
[; ;pic16f877a.h: 2269: unsigned EEPGD :1;
[; ;pic16f877a.h: 2270: };
[; ;pic16f877a.h: 2271: } EECON1bits_t;
[; ;pic16f877a.h: 2272: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877a.h: 2301: extern volatile unsigned char EECON2 @ 0x18D;
"2303
[; ;pic16f877a.h: 2303: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877a.h: 2313: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 2315: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 2317: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 2319: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 2321: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 2323: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 2325: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 2327: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 2329: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 2331: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 2333: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 2335: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 2337: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 2339: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 2341: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 2343: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 2345: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 2347: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 2349: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 2351: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 2353: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 2355: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 2357: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 2359: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 2361: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 2363: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 2365: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 2367: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 2369: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 2371: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 2373: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 2375: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 2377: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 2379: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 2381: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 2383: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 2385: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 2387: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 2389: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 2391: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 2393: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 2395: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 2397: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 2399: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 2401: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 2403: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 2405: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 2407: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 2409: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 2411: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 2413: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 2415: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 2417: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 2419: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 2421: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 2423: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 2425: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2427: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 2429: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2431: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2433: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 2435: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 2437: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 2439: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 2441: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 2443: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 2445: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2447: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2449: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2451: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2453: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2455: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 2457: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 2459: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 2461: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 2463: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 2465: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 2467: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 2469: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 2471: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 2473: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 2475: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 2477: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 2479: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 2481: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 2483: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 2485: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 2487: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 2489: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 2491: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 2493: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 2495: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 2497: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 2499: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 2501: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 2503: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 2505: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 2507: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 2509: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 2511: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 2513: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 2515: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 2517: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 2519: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 2521: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 2523: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 2525: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 2527: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 2529: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 2531: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 2533: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 2535: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 2537: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 2539: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 2541: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 2543: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 2545: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 2547: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 2549: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2551: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2553: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2555: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 2557: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 2559: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 2561: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 2563: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 2565: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 2567: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 2569: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 2571: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 2573: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 2575: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 2577: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 2579: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 2581: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 2583: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 2585: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2587: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 2589: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 2591: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 2593: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2595: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2597: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2599: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2601: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 2603: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 2605: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 2607: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 2609: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 2611: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 2613: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 2615: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 2617: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 2619: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 2621: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 2623: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 2625: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 2627: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 2629: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2631: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2633: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 2635: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 2637: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 2639: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2641: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 2643: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2645: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 2647: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 2649: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2651: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2653: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 2655: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 2657: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 2659: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 2661: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 2663: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 2665: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 2667: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 2669: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 2671: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 2673: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 2675: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 2677: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 2679: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 2681: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 2683: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 2685: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 2687: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 2689: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 2691: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 2693: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 2695: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 2697: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 2699: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 2701: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 2703: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 2705: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 2707: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 2709: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 2711: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 2713: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 2715: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 2717: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 2719: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 2721: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 2723: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 2725: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 2727: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 2729: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 2731: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 2733: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 2735: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 2737: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 2739: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 2741: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 2743: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2745: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2747: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2749: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2751: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 2753: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 2755: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 2757: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 2759: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 2761: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 2763: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 2765: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 2767: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 2769: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2771: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2773: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2775: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2777: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2779: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 2781: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 2783: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 2785: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2787: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2789: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 2791: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2793: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2795: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 184: extern unsigned char __resetbits;
[; ;pic.h: 185: extern __bit __powerdown;
[; ;pic.h: 186: extern __bit __timeout;
[; ;I2C.h: 15: void InitI2C(void);
[; ;I2C.h: 16: void I2C_Start(void);
[; ;I2C.h: 17: void I2C_ReStart(void);
[; ;I2C.h: 18: void I2C_Stop(void);
[; ;I2C.h: 19: void I2C_Send_ACK(void);
[; ;I2C.h: 20: void I2C_Send_NACK(void);
[; ;I2C.h: 21: bit I2C_Write_Byte(unsigned char);
[; ;I2C.h: 22: unsigned char I2C_Read_Byte(void);
[; ;LCD.h: 28: void WriteCommandToLCD(unsigned char);
[; ;LCD.h: 29: void WriteDataToLCD(char);
[; ;LCD.h: 30: void InitLCD(void);
[; ;LCD.h: 31: void WriteStringToLCD(const char*);
[; ;LCD.h: 32: void ClearLCDScreen(void);
[; ;LCD.h: 33: void DisplayTimeToLCD(unsigned char*);
[; ;LCD.h: 34: void DisplayDateOnLCD(unsigned char*);
[; ;LCD.h: 35: void WriteTempToLCD(int Temp);
[; ;LCD.h: 36: void DisplayFirstTimeToLCD(unsigned char* pTimeArray);
[; ;DS1307.h: 24: void Write_Byte_To_DS1307_RTC(unsigned char, unsigned char);
[; ;DS1307.h: 25: unsigned char Read_Byte_From_DS1307_RTC(unsigned char);
[; ;DS1307.h: 26: void Write_Bytes_To_DS1307_RTC(unsigned char, unsigned char*, unsigned char);
[; ;DS1307.h: 27: void Read_Bytes_From_DS1307_RTC(unsigned char, unsigned char*, unsigned int);
[; ;DS1307.h: 28: void Set_DS1307_RTC_Time(unsigned char, unsigned char, unsigned char, unsigned char);
[; ;DS1307.h: 29: unsigned char* Get_DS1307_RTC_Time(void);
[; ;DS1307.h: 30: void Set_DS1307_RTC_Date(unsigned char, unsigned char, unsigned char, unsigned char);
[; ;DS1307.h: 31: unsigned char* Get_DS1307_RTC_Date(void);
"3 main.c
[p x FOSC=HS ]
"4
[p x WDTE=OFF ]
"5
[p x PWRTE=OFF ]
"6
[p x BOREN=OFF ]
"7
[p x LVP=OFF ]
"8
[p x CPD=OFF ]
"9
[p x WRT=OFF ]
"10
[p x CP=OFF ]
[; ;main.c: 13: void ADCinit(void);
[; ;main.c: 14: void displayState1(void);
[; ;main.c: 15: void displayState2(void);
[; ;main.c: 16: void displayState3(void);
[; ;main.c: 17: void displayState4(void);
[; ;main.c: 18: unsigned int ReadADC(void);
"19
[v _ADCvalue `ui ~T0 @X0 1 e ]
[i _ADCvalue
-> -> 0 `i `ui
]
[; ;main.c: 19: unsigned int ADCvalue = 0;
"20
[v _f `ui ~T0 @X0 1 e ]
[v _h_alarm `ui ~T0 @X0 1 e ]
[i _h_alarm
-> -> 0 `i `ui
]
[v _m_alarm `ui ~T0 @X0 1 e ]
[i _m_alarm
-> -> 0 `i `ui
]
[v _s_alarm `ui ~T0 @X0 1 e ]
[i _s_alarm
-> -> 0 `i `ui
]
[; ;main.c: 20: unsigned int f, h_alarm = 0, m_alarm = 0, s_alarm = 0;
"21
[v _voltage `ui ~T0 @X0 1 e ]
[; ;main.c: 21: unsigned int voltage;
"22
[v _state `ui ~T0 @X0 1 e ]
[i _state
-> -> 1 `i `ui
]
[; ;main.c: 22: unsigned int state = 1;
"23
[v _switch_state `ui ~T0 @X0 1 e ]
[i _switch_state
-> -> 0 `i `ui
]
[; ;main.c: 23: unsigned int switch_state = 0;
"25
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 25: void main(void) {
[e :U _main ]
[f ]
[; ;main.c: 26: TRISA = 0xff;
"26
[e = _TRISA -> -> 255 `i `uc ]
[; ;main.c: 27: TRISC = 0X00;
"27
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 28: TRISD = 0X00;
"28
[e = _TRISD -> -> 0 `i `uc ]
[; ;main.c: 29: InitLCD();
"29
[e ( _InitLCD ..  ]
[; ;main.c: 30: InitI2C();
"30
[e ( _InitI2C ..  ]
[; ;main.c: 31: state = 1;
"31
[e = _state -> -> 1 `i `ui ]
[; ;main.c: 34: Set_DS1307_RTC_Time(1, 2, 30, 30);
"34
[e ( _Set_DS1307_RTC_Time (4 , , , -> -> 1 `i `uc -> -> 2 `i `uc -> -> 30 `i `uc -> -> 30 `i `uc ]
[; ;main.c: 36: Set_DS1307_RTC_Date(04, 04, 16, 2);
"36
[e ( _Set_DS1307_RTC_Date (4 , , , -> -> 4 `i `uc -> -> 4 `i `uc -> -> 16 `i `uc -> -> 2 `i `uc ]
[; ;main.c: 37: DisplayFirstTimeToLCD(Get_DS1307_RTC_Time());
"37
[e ( _DisplayFirstTimeToLCD (1 ( _Get_DS1307_RTC_Time ..  ]
[; ;main.c: 38: while (1) {
"38
[e :U 98 ]
{
[; ;main.c: 39: switch (state) {
"39
[e $U 101  ]
{
[; ;main.c: 40: case 1:
"40
[e :U 102 ]
[; ;main.c: 41: displayState1();
"41
[e ( _displayState1 ..  ]
[; ;main.c: 42: break;
"42
[e $U 100  ]
[; ;main.c: 43: case 2:
"43
[e :U 103 ]
[; ;main.c: 44: displayState2();
"44
[e ( _displayState2 ..  ]
[; ;main.c: 45: break;
"45
[e $U 100  ]
[; ;main.c: 46: case 3:
"46
[e :U 104 ]
[; ;main.c: 47: displayState3();
"47
[e ( _displayState3 ..  ]
[; ;main.c: 48: break;
"48
[e $U 100  ]
[; ;main.c: 49: case 4:
"49
[e :U 105 ]
[; ;main.c: 50: displayState4();
"50
[e ( _displayState4 ..  ]
[; ;main.c: 51: break;
"51
[e $U 100  ]
"52
}
[; ;main.c: 52: }
[e $U 100  ]
"39
[e :U 101 ]
[e [\ _state , $ -> -> 1 `i `ui 102
 , $ -> -> 2 `i `ui 103
 , $ -> -> 3 `i `ui 104
 , $ -> -> 4 `i `ui 105
 100 ]
"52
[e :U 100 ]
"53
}
[e :U 97 ]
"38
[e $U 98  ]
[e :U 99 ]
[; ;main.c: 53: }
[; ;main.c: 54: }
"54
[e :UE 96 ]
}
"56
[v _ADCinit `(v ~T0 @X0 1 ef ]
"57
{
[; ;main.c: 56: void ADCinit(void)
[; ;main.c: 57: {
[e :U _ADCinit ]
[f ]
[; ;main.c: 58: ADCON1bits.ADCS2 = 0, ADCON0bits.ADCS1 = 0, ADCON0bits.ADCS0 = 0;
"58
[e ; ; = . . _ADCON1bits 0 2 -> -> 0 `i `uc = . . _ADCON0bits 1 6 -> -> 0 `i `uc = . . _ADCON0bits 1 5 -> -> 0 `i `uc ]
[; ;main.c: 59: CHS2 = 0, CHS1 = 0, CHS0 = 0;
"59
[e ; ; -> = _CHS2 -> -> 0 `i `b `i -> = _CHS1 -> -> 0 `i `b `i -> = _CHS0 -> -> 0 `i `b `i ]
[; ;main.c: 60: ADCON1bits.ADFM = 1;
"60
[e = . . _ADCON1bits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 61: ADCON1bits.PCFG = 0XE;
"61
[e = . . _ADCON1bits 0 0 -> -> 14 `i `uc ]
[; ;main.c: 62: ADCON0bits.ADON = 1;
"62
[e = . . _ADCON0bits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 63: }
"63
[e :UE 106 ]
}
"66
[v _ReadADC `(ui ~T0 @X0 1 ef ]
{
[; ;main.c: 66: unsigned int ReadADC(void) {
[e :U _ReadADC ]
[f ]
"67
[v _nhietdo `ui ~T0 @X0 1 a ]
[; ;main.c: 67: unsigned int nhietdo = 0;
[e = _nhietdo -> -> 0 `i `ui ]
[; ;main.c: 68: ADCON0bits.GO_nDONE = 1;
"68
[e = . . _ADCON0bits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 69: while (ADCON0bits.GO_nDONE);
"69
[e $U 108  ]
[e :U 109 ]
[e :U 108 ]
[e $ != -> . . _ADCON0bits 0 2 `i -> -> -> 0 `i `Vuc `i 109  ]
[e :U 110 ]
[; ;main.c: 70: nhietdo = ADRESH * 256 + ADRESL;
"70
[e = _nhietdo -> + * -> _ADRESH `i -> 256 `i -> _ADRESL `i `ui ]
[; ;main.c: 71: return (nhietdo);
"71
[e ) _nhietdo ]
[e $UE 107  ]
[; ;main.c: 72: }
"72
[e :UE 107 ]
}
"75
[v _displayState1 `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 75: void displayState1(void) {
[e :U _displayState1 ]
[f ]
[; ;main.c: 76: while (1) {
"76
[e :U 113 ]
{
[; ;main.c: 78: DisplayTimeToLCD(Get_DS1307_RTC_Time());
"78
[e ( _DisplayTimeToLCD (1 ( _Get_DS1307_RTC_Time ..  ]
[; ;main.c: 79: ADCinit();
"79
[e ( _ADCinit ..  ]
[; ;main.c: 80: ADCvalue = ReadADC();
"80
[e = _ADCvalue ( _ReadADC ..  ]
[; ;main.c: 82: if (Get_DS1307_RTC_Time()[0] > 40) {
"82
[e $ ! > -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 0 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i -> 40 `i 115  ]
{
[; ;main.c: 83: WriteCommandToLCD(0xc0);
"83
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 84: DisplayDateOnLCD(Get_DS1307_RTC_Date());
"84
[e ( _DisplayDateOnLCD (1 ( _Get_DS1307_RTC_Date ..  ]
"85
}
[e :U 115 ]
[; ;main.c: 85: }
[; ;main.c: 87: if (Get_DS1307_RTC_Time()[0] < 40) {
"87
[e $ ! < -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 0 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i -> 40 `i 116  ]
{
[; ;main.c: 89: voltage = (int) (5000.0f / 1023 * ADCvalue);
"89
[e = _voltage -> -> * / -> .5000.0 `f -> -> 1023 `i `f -> _ADCvalue `f `i `ui ]
[; ;main.c: 90: f = voltage / 10;
"90
[e = _f / _voltage -> -> 10 `i `ui ]
[; ;main.c: 91: WriteCommandToLCD(0xc0);
"91
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 92: WriteStringToLCD("TEMP: ");
"92
[e ( _WriteStringToLCD (1 :s 1C ]
[; ;main.c: 93: WriteTempToLCD(f);
"93
[e ( _WriteTempToLCD (1 -> _f `i ]
[; ;main.c: 94: WriteCommandToLCD(0xc8);
"94
[e ( _WriteCommandToLCD (1 -> -> 200 `i `uc ]
[; ;main.c: 95: WriteDataToLCD(0xdf);
"95
[e ( _WriteDataToLCD (1 -> -> 223 `i `uc ]
[; ;main.c: 96: WriteStringToLCD("C");
"96
[e ( _WriteStringToLCD (1 :s 2C ]
"97
}
[e :U 116 ]
[; ;main.c: 97: }
[; ;main.c: 100: if (!RA1) {
"100
[e $ ! ! _RA1 117  ]
{
[; ;main.c: 101: state++;
"101
[e ++ _state -> -> 1 `i `ui ]
[; ;main.c: 102: if (state == 5) {
"102
[e $ ! == _state -> -> 5 `i `ui 118  ]
{
[; ;main.c: 103: state = 1;
"103
[e = _state -> -> 1 `i `ui ]
"104
}
[e :U 118 ]
[; ;main.c: 104: }
[; ;main.c: 105: break;
"105
[e $U 114  ]
"106
}
[e :U 117 ]
[; ;main.c: 106: }
[; ;main.c: 108: if (h_alarm == (int) Get_DS1307_RTC_Time()[2] && m_alarm == (int) Get_DS1307_RTC_Time()[1]) {
"108
[e $ ! && == _h_alarm -> -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 2 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i `ui == _m_alarm -> -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 1 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i `ui 119  ]
{
[; ;main.c: 109: RD0 = 0;
"109
[e = _RD0 -> -> 0 `i `b ]
"110
}
[e :U 119 ]
[; ;main.c: 110: }
[; ;main.c: 112: if (!RA4) {
"112
[e $ ! ! _RA4 120  ]
{
[; ;main.c: 113: RD0 = 1;
"113
[e = _RD0 -> -> 1 `i `b ]
[; ;main.c: 114: h_alarm = 0;
"114
[e = _h_alarm -> -> 0 `i `ui ]
[; ;main.c: 115: m_alarm = 0;
"115
[e = _m_alarm -> -> 0 `i `ui ]
"116
}
[e :U 120 ]
"118
}
[e :U 112 ]
"76
[e $U 113  ]
[e :U 114 ]
[; ;main.c: 116: }
[; ;main.c: 118: }
[; ;main.c: 119: }
"119
[e :UE 111 ]
}
"122
[v _displayState2 `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 122: void displayState2(void) {
[e :U _displayState2 ]
[f ]
[; ;main.c: 123: ClearLCDScreen();
"123
[e ( _ClearLCDScreen ..  ]
"125
[v _h `ui ~T0 @X0 1 a ]
"126
[v _m `ui ~T0 @X0 1 a ]
"127
[v _s `ui ~T0 @X0 1 a ]
[; ;main.c: 125: unsigned int h;
[; ;main.c: 126: unsigned int m;
[; ;main.c: 127: unsigned int s;
[; ;main.c: 128: h = (int) Get_DS1307_RTC_Time()[2];
"128
[e = _h -> -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 2 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i `ui ]
[; ;main.c: 129: m = (int) Get_DS1307_RTC_Time()[1];
"129
[e = _m -> -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 1 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i `ui ]
[; ;main.c: 130: s = (int) Get_DS1307_RTC_Time()[0];
"130
[e = _s -> -> *U + ( _Get_DS1307_RTC_Time ..  * -> -> 0 `i `x -> -> # *U ( _Get_DS1307_RTC_Time ..  `i `x `i `ui ]
[; ;main.c: 132: if (!RA1) {
"132
[e $ ! ! _RA1 122  ]
{
[; ;main.c: 133: state++;
"133
[e ++ _state -> -> 1 `i `ui ]
[; ;main.c: 134: if (state == 5) {
"134
[e $ ! == _state -> -> 5 `i `ui 123  ]
{
[; ;main.c: 135: state = 1;
"135
[e = _state -> -> 1 `i `ui ]
"136
}
[e :U 123 ]
"137
}
[e :U 122 ]
[; ;main.c: 136: }
[; ;main.c: 137: }
[; ;main.c: 139: while (1) {
"139
[e :U 125 ]
{
[; ;main.c: 140: WriteCommandToLCD(0x80);
"140
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 141: WriteStringToLCD("  SETTING TIME");
"141
[e ( _WriteStringToLCD (1 :s 3C ]
[; ;main.c: 142: WriteCommandToLCD(0xc0);
"142
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 143: WriteTempToLCD(h);
"143
[e ( _WriteTempToLCD (1 -> _h `i ]
[; ;main.c: 144: WriteStringToLCD(":");
"144
[e ( _WriteStringToLCD (1 :s 4C ]
[; ;main.c: 145: WriteTempToLCD(m);
"145
[e ( _WriteTempToLCD (1 -> _m `i ]
[; ;main.c: 146: WriteStringToLCD(":");
"146
[e ( _WriteStringToLCD (1 :s 5C ]
[; ;main.c: 147: WriteTempToLCD(s);
"147
[e ( _WriteTempToLCD (1 -> _s `i ]
[; ;main.c: 148: if (!RA1) break;
"148
[e $ ! ! _RA1 127  ]
[e $U 126  ]
[e :U 127 ]
[; ;main.c: 149: while (1) {
"149
[e :U 129 ]
{
[; ;main.c: 151: if (RA4 == 0) {
"151
[e $ ! == -> _RA4 `i -> 0 `i 131  ]
{
[; ;main.c: 152: switch_state++;
"152
[e ++ _switch_state -> -> 1 `i `ui ]
[; ;main.c: 153: if (switch_state == 4) {
"153
[e $ ! == _switch_state -> -> 4 `i `ui 132  ]
{
[; ;main.c: 154: break;
"154
[e $U 130  ]
"155
}
[e :U 132 ]
"156
}
[e :U 131 ]
[; ;main.c: 155: }
[; ;main.c: 156: }
[; ;main.c: 158: if (RA1 == 0) {
"158
[e $ ! == -> _RA1 `i -> 0 `i 133  ]
{
[; ;main.c: 159: state = 3;
"159
[e = _state -> -> 3 `i `ui ]
[; ;main.c: 160: break;
"160
[e $U 130  ]
"161
}
[e :U 133 ]
[; ;main.c: 161: }
[; ;main.c: 162: switch (switch_state) {
"162
[e $U 135  ]
{
[; ;main.c: 163: case 1:
"163
[e :U 136 ]
[; ;main.c: 164: WriteCommandToLCD(0x80);
"164
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 165: WriteStringToLCD("   CHANGE HOUR     ");
"165
[e ( _WriteStringToLCD (1 :s 6C ]
[; ;main.c: 166: if (RA2 == 0 && h < 24) {
"166
[e $ ! && == -> _RA2 `i -> 0 `i < _h -> -> 24 `i `ui 137  ]
{
[; ;main.c: 167: h++;
"167
[e ++ _h -> -> 1 `i `ui ]
[; ;main.c: 168: WriteCommandToLCD(0xc0);
"168
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 169: WriteTempToLCD(h);
"169
[e ( _WriteTempToLCD (1 -> _h `i ]
"170
}
[e :U 137 ]
[; ;main.c: 170: }
[; ;main.c: 171: if (RA3 == 0 && h > 0) {
"171
[e $ ! && == -> _RA3 `i -> 0 `i > _h -> -> 0 `i `ui 138  ]
{
[; ;main.c: 172: h--;
"172
[e -- _h -> -> 1 `i `ui ]
[; ;main.c: 173: WriteCommandToLCD(0xc0);
"173
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 174: WriteTempToLCD(h);
"174
[e ( _WriteTempToLCD (1 -> _h `i ]
"175
}
[e :U 138 ]
[; ;main.c: 175: }
[; ;main.c: 176: break;
"176
[e $U 134  ]
[; ;main.c: 178: case 2:
"178
[e :U 139 ]
[; ;main.c: 179: WriteCommandToLCD(0x80);
"179
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 180: WriteStringToLCD("   CHANGE MINUTE   ");
"180
[e ( _WriteStringToLCD (1 :s 7C ]
[; ;main.c: 181: if (RA2 == 0 && m < 60) {
"181
[e $ ! && == -> _RA2 `i -> 0 `i < _m -> -> 60 `i `ui 140  ]
{
[; ;main.c: 182: m++;
"182
[e ++ _m -> -> 1 `i `ui ]
[; ;main.c: 183: WriteCommandToLCD(0xc0 + 3);
"183
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 3 `i `uc ]
[; ;main.c: 184: WriteTempToLCD(m);
"184
[e ( _WriteTempToLCD (1 -> _m `i ]
"185
}
[e :U 140 ]
[; ;main.c: 185: }
[; ;main.c: 186: if (RA3 == 0 && m > 0) {
"186
[e $ ! && == -> _RA3 `i -> 0 `i > _m -> -> 0 `i `ui 141  ]
{
[; ;main.c: 187: m--;
"187
[e -- _m -> -> 1 `i `ui ]
[; ;main.c: 188: WriteCommandToLCD(0xc0 + 3);
"188
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 3 `i `uc ]
[; ;main.c: 189: WriteTempToLCD(m);
"189
[e ( _WriteTempToLCD (1 -> _m `i ]
"190
}
[e :U 141 ]
[; ;main.c: 190: }
[; ;main.c: 191: break;
"191
[e $U 134  ]
[; ;main.c: 192: case 3:
"192
[e :U 142 ]
[; ;main.c: 193: WriteCommandToLCD(0x80);
"193
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 194: WriteStringToLCD("  CHANGE SECOND  ");
"194
[e ( _WriteStringToLCD (1 :s 8C ]
[; ;main.c: 195: if (RA2 == 0) {
"195
[e $ ! == -> _RA2 `i -> 0 `i 143  ]
{
[; ;main.c: 196: s++;
"196
[e ++ _s -> -> 1 `i `ui ]
[; ;main.c: 197: WriteCommandToLCD(0xc0 + 6);
"197
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 6 `i `uc ]
[; ;main.c: 198: WriteTempToLCD(s);
"198
[e ( _WriteTempToLCD (1 -> _s `i ]
"199
}
[e :U 143 ]
[; ;main.c: 199: }
[; ;main.c: 200: if (RA3 == 0 && s > 0) {
"200
[e $ ! && == -> _RA3 `i -> 0 `i > _s -> -> 0 `i `ui 144  ]
{
[; ;main.c: 201: s--;
"201
[e -- _s -> -> 1 `i `ui ]
[; ;main.c: 202: WriteCommandToLCD(0xc0 + 6);
"202
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 6 `i `uc ]
[; ;main.c: 203: WriteTempToLCD(s);
"203
[e ( _WriteTempToLCD (1 -> _s `i ]
"204
}
[e :U 144 ]
[; ;main.c: 204: }
[; ;main.c: 205: break;
"205
[e $U 134  ]
"206
}
[; ;main.c: 206: }
[e $U 134  ]
"162
[e :U 135 ]
[e [\ _switch_state , $ -> -> 1 `i `ui 136
 , $ -> -> 2 `i `ui 139
 , $ -> -> 3 `i `ui 142
 134 ]
"206
[e :U 134 ]
[; ;main.c: 208: Set_DS1307_RTC_Time(1, h, m, s);
"208
[e ( _Set_DS1307_RTC_Time (4 , , , -> -> 1 `i `uc -> _h `uc -> _m `uc -> _s `uc ]
"209
}
[e :U 128 ]
"149
[e $U 129  ]
[e :U 130 ]
"210
}
[e :U 124 ]
"139
[e $U 125  ]
[e :U 126 ]
[; ;main.c: 209: }
[; ;main.c: 210: }
[; ;main.c: 212: }
"212
[e :UE 121 ]
}
"215
[v _displayState3 `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 215: void displayState3(void) {
[e :U _displayState3 ]
[f ]
[; ;main.c: 216: ClearLCDScreen();
"216
[e ( _ClearLCDScreen ..  ]
"218
[v _d `ui ~T0 @X0 1 a ]
"219
[v _m `ui ~T0 @X0 1 a ]
"220
[v _y `ui ~T0 @X0 1 a ]
"221
[v _w `ui ~T0 @X0 1 a ]
[; ;main.c: 218: unsigned int d;
[; ;main.c: 219: unsigned int m;
[; ;main.c: 220: unsigned int y;
[; ;main.c: 221: unsigned int w;
[; ;main.c: 222: d = (int) Get_DS1307_RTC_Date()[1];
"222
[e = _d -> -> *U + ( _Get_DS1307_RTC_Date ..  * -> -> 1 `i `x -> -> # *U ( _Get_DS1307_RTC_Date ..  `i `x `i `ui ]
[; ;main.c: 223: m = (int) Get_DS1307_RTC_Date()[2];
"223
[e = _m -> -> *U + ( _Get_DS1307_RTC_Date ..  * -> -> 2 `i `x -> -> # *U ( _Get_DS1307_RTC_Date ..  `i `x `i `ui ]
[; ;main.c: 224: y = (int) Get_DS1307_RTC_Date()[3];
"224
[e = _y -> -> *U + ( _Get_DS1307_RTC_Date ..  * -> -> 3 `i `x -> -> # *U ( _Get_DS1307_RTC_Date ..  `i `x `i `ui ]
[; ;main.c: 225: w = (int) Get_DS1307_RTC_Date()[0];
"225
[e = _w -> -> *U + ( _Get_DS1307_RTC_Date ..  * -> -> 0 `i `x -> -> # *U ( _Get_DS1307_RTC_Date ..  `i `x `i `ui ]
[; ;main.c: 226: if (!RA1) {
"226
[e $ ! ! _RA1 146  ]
{
[; ;main.c: 227: state++;
"227
[e ++ _state -> -> 1 `i `ui ]
[; ;main.c: 228: if (state == 5) {
"228
[e $ ! == _state -> -> 5 `i `ui 147  ]
{
[; ;main.c: 229: state = 1;
"229
[e = _state -> -> 1 `i `ui ]
"230
}
[e :U 147 ]
"231
}
[e :U 146 ]
[; ;main.c: 230: }
[; ;main.c: 231: }
[; ;main.c: 232: while (1) {
"232
[e :U 149 ]
{
[; ;main.c: 233: WriteCommandToLCD(0x80);
"233
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 234: WriteStringToLCD("  SETTING DATE   ");
"234
[e ( _WriteStringToLCD (1 :s 9C ]
[; ;main.c: 235: WriteCommandToLCD(0xc0);
"235
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 236: WriteTempToLCD(d);
"236
[e ( _WriteTempToLCD (1 -> _d `i ]
[; ;main.c: 237: WriteStringToLCD(":");
"237
[e ( _WriteStringToLCD (1 :s 10C ]
[; ;main.c: 238: WriteTempToLCD(m);
"238
[e ( _WriteTempToLCD (1 -> _m `i ]
[; ;main.c: 239: WriteStringToLCD(":");
"239
[e ( _WriteStringToLCD (1 :s 11C ]
[; ;main.c: 240: WriteTempToLCD(y);
"240
[e ( _WriteTempToLCD (1 -> _y `i ]
[; ;main.c: 241: WriteStringToLCD(" ");
"241
[e ( _WriteStringToLCD (1 :s 12C ]
[; ;main.c: 242: switch (w) {
"242
[e $U 152  ]
{
[; ;main.c: 243: case 1: WriteStringToLCD("MON");
"243
[e :U 153 ]
[e ( _WriteStringToLCD (1 :s 13C ]
[; ;main.c: 244: break;
"244
[e $U 151  ]
[; ;main.c: 245: case 2: WriteStringToLCD("TUE");
"245
[e :U 154 ]
[e ( _WriteStringToLCD (1 :s 14C ]
[; ;main.c: 246: break;
"246
[e $U 151  ]
[; ;main.c: 247: case 3: WriteStringToLCD("WED");
"247
[e :U 155 ]
[e ( _WriteStringToLCD (1 :s 15C ]
[; ;main.c: 248: break;
"248
[e $U 151  ]
[; ;main.c: 249: case 4: WriteStringToLCD("THU");
"249
[e :U 156 ]
[e ( _WriteStringToLCD (1 :s 16C ]
[; ;main.c: 250: break;
"250
[e $U 151  ]
[; ;main.c: 251: case 5: WriteStringToLCD("FRI");
"251
[e :U 157 ]
[e ( _WriteStringToLCD (1 :s 17C ]
[; ;main.c: 252: break;
"252
[e $U 151  ]
[; ;main.c: 253: case 6: WriteStringToLCD("SAT");
"253
[e :U 158 ]
[e ( _WriteStringToLCD (1 :s 18C ]
[; ;main.c: 254: break;
"254
[e $U 151  ]
[; ;main.c: 255: case 7: WriteStringToLCD("SUN");
"255
[e :U 159 ]
[e ( _WriteStringToLCD (1 :s 19C ]
[; ;main.c: 256: break;
"256
[e $U 151  ]
[; ;main.c: 258: default: WriteStringToLCD("???");
"258
[e :U 160 ]
[e ( _WriteStringToLCD (1 :s 20C ]
[; ;main.c: 259: break;
"259
[e $U 151  ]
"260
}
[; ;main.c: 260: }
[e $U 151  ]
"242
[e :U 152 ]
[e [\ _w , $ -> -> 1 `i `ui 153
 , $ -> -> 2 `i `ui 154
 , $ -> -> 3 `i `ui 155
 , $ -> -> 4 `i `ui 156
 , $ -> -> 5 `i `ui 157
 , $ -> -> 6 `i `ui 158
 , $ -> -> 7 `i `ui 159
 160 ]
"260
[e :U 151 ]
[; ;main.c: 262: if (!RA1) break;
"262
[e $ ! ! _RA1 161  ]
[e $U 150  ]
[e :U 161 ]
[; ;main.c: 263: while (1) {
"263
[e :U 163 ]
{
[; ;main.c: 264: if (RA4 == 0) {
"264
[e $ ! == -> _RA4 `i -> 0 `i 165  ]
{
[; ;main.c: 265: switch_state++;
"265
[e ++ _switch_state -> -> 1 `i `ui ]
[; ;main.c: 266: if (switch_state == 4) {
"266
[e $ ! == _switch_state -> -> 4 `i `ui 166  ]
{
[; ;main.c: 267: break;
"267
[e $U 164  ]
"268
}
[e :U 166 ]
"269
}
[e :U 165 ]
[; ;main.c: 268: }
[; ;main.c: 269: }
[; ;main.c: 270: if (RA1 == 0) {
"270
[e $ ! == -> _RA1 `i -> 0 `i 167  ]
{
[; ;main.c: 271: state = 4;
"271
[e = _state -> -> 4 `i `ui ]
[; ;main.c: 272: break;
"272
[e $U 164  ]
"273
}
[e :U 167 ]
[; ;main.c: 273: }
[; ;main.c: 274: switch (switch_state) {
"274
[e $U 169  ]
{
[; ;main.c: 275: case 1:
"275
[e :U 170 ]
[; ;main.c: 276: WriteCommandToLCD(0x80);
"276
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 277: WriteStringToLCD("  CHANGE DAY   ");
"277
[e ( _WriteStringToLCD (1 :s 21C ]
[; ;main.c: 278: if (RA2 == 0 && d < 31) {
"278
[e $ ! && == -> _RA2 `i -> 0 `i < _d -> -> 31 `i `ui 171  ]
{
[; ;main.c: 279: d++;
"279
[e ++ _d -> -> 1 `i `ui ]
[; ;main.c: 280: WriteCommandToLCD(0xc0);
"280
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 281: WriteTempToLCD(d);
"281
[e ( _WriteTempToLCD (1 -> _d `i ]
"282
}
[e :U 171 ]
[; ;main.c: 282: }
[; ;main.c: 283: if (RA3 == 0 && d > 0) {
"283
[e $ ! && == -> _RA3 `i -> 0 `i > _d -> -> 0 `i `ui 172  ]
{
[; ;main.c: 284: d--;
"284
[e -- _d -> -> 1 `i `ui ]
[; ;main.c: 285: WriteCommandToLCD(0xc0);
"285
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 286: WriteTempToLCD(d);
"286
[e ( _WriteTempToLCD (1 -> _d `i ]
"287
}
[e :U 172 ]
[; ;main.c: 287: }
[; ;main.c: 288: break;
"288
[e $U 168  ]
[; ;main.c: 290: case 2:
"290
[e :U 173 ]
[; ;main.c: 291: WriteCommandToLCD(0x80);
"291
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 292: WriteStringToLCD("   CHANGE MONTH    ");
"292
[e ( _WriteStringToLCD (1 :s 22C ]
[; ;main.c: 293: if (RA2 == 0 && m < 12) {
"293
[e $ ! && == -> _RA2 `i -> 0 `i < _m -> -> 12 `i `ui 174  ]
{
[; ;main.c: 294: m++;
"294
[e ++ _m -> -> 1 `i `ui ]
[; ;main.c: 295: WriteCommandToLCD(0xc0 + 3);
"295
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 3 `i `uc ]
[; ;main.c: 296: WriteTempToLCD(m);
"296
[e ( _WriteTempToLCD (1 -> _m `i ]
"297
}
[e :U 174 ]
[; ;main.c: 297: }
[; ;main.c: 298: if (RA3 == 0 && m > 0) {
"298
[e $ ! && == -> _RA3 `i -> 0 `i > _m -> -> 0 `i `ui 175  ]
{
[; ;main.c: 299: m--;
"299
[e -- _m -> -> 1 `i `ui ]
[; ;main.c: 300: WriteCommandToLCD(0xc0 + 3);
"300
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 3 `i `uc ]
[; ;main.c: 301: WriteTempToLCD(m);
"301
[e ( _WriteTempToLCD (1 -> _m `i ]
"302
}
[e :U 175 ]
[; ;main.c: 302: }
[; ;main.c: 303: break;
"303
[e $U 168  ]
[; ;main.c: 304: case 3:
"304
[e :U 176 ]
[; ;main.c: 305: WriteCommandToLCD(0x80);
"305
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 306: WriteStringToLCD("  CHANGE YEAR  ");
"306
[e ( _WriteStringToLCD (1 :s 23C ]
[; ;main.c: 307: if (RA2 == 0) {
"307
[e $ ! == -> _RA2 `i -> 0 `i 177  ]
{
[; ;main.c: 308: y++;
"308
[e ++ _y -> -> 1 `i `ui ]
[; ;main.c: 309: WriteCommandToLCD(0xc0 + 6);
"309
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 6 `i `uc ]
[; ;main.c: 310: WriteTempToLCD(y);
"310
[e ( _WriteTempToLCD (1 -> _y `i ]
"311
}
[e :U 177 ]
[; ;main.c: 311: }
[; ;main.c: 312: if (RA3 == 0 && y > 0) {
"312
[e $ ! && == -> _RA3 `i -> 0 `i > _y -> -> 0 `i `ui 178  ]
{
[; ;main.c: 313: y--;
"313
[e -- _y -> -> 1 `i `ui ]
[; ;main.c: 314: WriteCommandToLCD(0xc0 + 6);
"314
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 6 `i `uc ]
[; ;main.c: 315: WriteTempToLCD(y);
"315
[e ( _WriteTempToLCD (1 -> _y `i ]
"316
}
[e :U 178 ]
[; ;main.c: 316: }
[; ;main.c: 317: break;
"317
[e $U 168  ]
[; ;main.c: 318: case 4:
"318
[e :U 179 ]
[; ;main.c: 319: WriteCommandToLCD(0x80);
"319
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 320: WriteStringToLCD(" CHANGE WEEK DAY  ");
"320
[e ( _WriteStringToLCD (1 :s 24C ]
[; ;main.c: 321: if (RA2 == 0 && w <= 7) {
"321
[e $ ! && == -> _RA2 `i -> 0 `i <= _w -> -> 7 `i `ui 180  ]
{
[; ;main.c: 322: w++;
"322
[e ++ _w -> -> 1 `i `ui ]
"323
}
[e :U 180 ]
[; ;main.c: 323: }
[; ;main.c: 324: if (RA3 == 0 && w >= 1) {
"324
[e $ ! && == -> _RA3 `i -> 0 `i >= _w -> -> 1 `i `ui 181  ]
{
[; ;main.c: 325: w--;
"325
[e -- _w -> -> 1 `i `ui ]
"326
}
[e :U 181 ]
[; ;main.c: 326: }
[; ;main.c: 327: WriteCommandToLCD(0xc0 + 9);
"327
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 9 `i `uc ]
[; ;main.c: 328: switch (w) {
"328
[e $U 183  ]
{
[; ;main.c: 329: case 1: WriteStringToLCD("MON");
"329
[e :U 184 ]
[e ( _WriteStringToLCD (1 :s 25C ]
[; ;main.c: 330: break;
"330
[e $U 182  ]
[; ;main.c: 331: case 2: WriteStringToLCD("TUE");
"331
[e :U 185 ]
[e ( _WriteStringToLCD (1 :s 26C ]
[; ;main.c: 332: break;
"332
[e $U 182  ]
[; ;main.c: 333: case 3: WriteStringToLCD("WED");
"333
[e :U 186 ]
[e ( _WriteStringToLCD (1 :s 27C ]
[; ;main.c: 334: break;
"334
[e $U 182  ]
[; ;main.c: 335: case 4: WriteStringToLCD("THU");
"335
[e :U 187 ]
[e ( _WriteStringToLCD (1 :s 28C ]
[; ;main.c: 336: break;
"336
[e $U 182  ]
[; ;main.c: 337: case 5: WriteStringToLCD("FRI");
"337
[e :U 188 ]
[e ( _WriteStringToLCD (1 :s 29C ]
[; ;main.c: 338: break;
"338
[e $U 182  ]
[; ;main.c: 339: case 6: WriteStringToLCD("SAT");
"339
[e :U 189 ]
[e ( _WriteStringToLCD (1 :s 30C ]
[; ;main.c: 340: break;
"340
[e $U 182  ]
[; ;main.c: 341: case 7: WriteStringToLCD("SUN");
"341
[e :U 190 ]
[e ( _WriteStringToLCD (1 :s 31C ]
[; ;main.c: 342: break;
"342
[e $U 182  ]
[; ;main.c: 343: default: WriteStringToLCD("???");
"343
[e :U 191 ]
[e ( _WriteStringToLCD (1 :s 32C ]
[; ;main.c: 344: break;
"344
[e $U 182  ]
"345
}
[; ;main.c: 345: }
[e $U 182  ]
"328
[e :U 183 ]
[e [\ _w , $ -> -> 1 `i `ui 184
 , $ -> -> 2 `i `ui 185
 , $ -> -> 3 `i `ui 186
 , $ -> -> 4 `i `ui 187
 , $ -> -> 5 `i `ui 188
 , $ -> -> 6 `i `ui 189
 , $ -> -> 7 `i `ui 190
 191 ]
"345
[e :U 182 ]
[; ;main.c: 346: break;
"346
[e $U 168  ]
"347
}
[; ;main.c: 347: }
[e $U 168  ]
"274
[e :U 169 ]
[e [\ _switch_state , $ -> -> 1 `i `ui 170
 , $ -> -> 2 `i `ui 173
 , $ -> -> 3 `i `ui 176
 , $ -> -> 4 `i `ui 179
 168 ]
"347
[e :U 168 ]
[; ;main.c: 348: Set_DS1307_RTC_Date(d, m, y, w);
"348
[e ( _Set_DS1307_RTC_Date (4 , , , -> _d `uc -> _m `uc -> _y `uc -> _w `uc ]
"349
}
[e :U 162 ]
"263
[e $U 163  ]
[e :U 164 ]
"350
}
[e :U 148 ]
"232
[e $U 149  ]
[e :U 150 ]
[; ;main.c: 349: }
[; ;main.c: 350: }
[; ;main.c: 352: }
"352
[e :UE 145 ]
}
"355
[v _displayState4 `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 355: void displayState4(void) {
[e :U _displayState4 ]
[f ]
[; ;main.c: 356: ClearLCDScreen();
"356
[e ( _ClearLCDScreen ..  ]
"357
[v _h `ui ~T0 @X0 1 a ]
"358
[v _m `ui ~T0 @X0 1 a ]
"359
[v _s `ui ~T0 @X0 1 a ]
[; ;main.c: 357: unsigned int h;
[; ;main.c: 358: unsigned int m;
[; ;main.c: 359: unsigned int s;
[; ;main.c: 360: h = 0;
"360
[e = _h -> -> 0 `i `ui ]
[; ;main.c: 361: m = 0;
"361
[e = _m -> -> 0 `i `ui ]
[; ;main.c: 362: s = 0;
"362
[e = _s -> -> 0 `i `ui ]
[; ;main.c: 363: if (!RA1) {
"363
[e $ ! ! _RA1 193  ]
{
[; ;main.c: 364: state++;
"364
[e ++ _state -> -> 1 `i `ui ]
[; ;main.c: 365: if (state == 5) {
"365
[e $ ! == _state -> -> 5 `i `ui 194  ]
{
[; ;main.c: 366: state = 1;
"366
[e = _state -> -> 1 `i `ui ]
"367
}
[e :U 194 ]
"368
}
[e :U 193 ]
[; ;main.c: 367: }
[; ;main.c: 368: }
[; ;main.c: 369: while (1) {
"369
[e :U 196 ]
{
[; ;main.c: 370: WriteCommandToLCD(0x80);
"370
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 371: WriteStringToLCD("     ALARM     ");
"371
[e ( _WriteStringToLCD (1 :s 33C ]
[; ;main.c: 372: WriteCommandToLCD(0xc0);
"372
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 373: WriteTempToLCD(h);
"373
[e ( _WriteTempToLCD (1 -> _h `i ]
[; ;main.c: 374: WriteStringToLCD(":");
"374
[e ( _WriteStringToLCD (1 :s 34C ]
[; ;main.c: 375: WriteTempToLCD(m);
"375
[e ( _WriteTempToLCD (1 -> _m `i ]
[; ;main.c: 376: WriteStringToLCD(":");
"376
[e ( _WriteStringToLCD (1 :s 35C ]
[; ;main.c: 377: WriteTempToLCD(s);
"377
[e ( _WriteTempToLCD (1 -> _s `i ]
[; ;main.c: 378: if (!RA1) {
"378
[e $ ! ! _RA1 198  ]
{
[; ;main.c: 379: DisplayFirstTimeToLCD(Get_DS1307_RTC_Time());
"379
[e ( _DisplayFirstTimeToLCD (1 ( _Get_DS1307_RTC_Time ..  ]
[; ;main.c: 381: break;
"381
[e $U 197  ]
"382
}
[e :U 198 ]
[; ;main.c: 382: }
[; ;main.c: 383: while (1) {
"383
[e :U 200 ]
{
[; ;main.c: 384: if (RA4 == 0) {
"384
[e $ ! == -> _RA4 `i -> 0 `i 202  ]
{
[; ;main.c: 385: switch_state++;
"385
[e ++ _switch_state -> -> 1 `i `ui ]
[; ;main.c: 386: if (switch_state == 4) {
"386
[e $ ! == _switch_state -> -> 4 `i `ui 203  ]
{
[; ;main.c: 387: break;
"387
[e $U 201  ]
"388
}
[e :U 203 ]
"389
}
[e :U 202 ]
[; ;main.c: 388: }
[; ;main.c: 389: }
[; ;main.c: 390: if (RA1 == 0) {
"390
[e $ ! == -> _RA1 `i -> 0 `i 204  ]
{
[; ;main.c: 391: state = 1;
"391
[e = _state -> -> 1 `i `ui ]
[; ;main.c: 392: break;
"392
[e $U 201  ]
"393
}
[e :U 204 ]
[; ;main.c: 393: }
[; ;main.c: 394: switch (switch_state) {
"394
[e $U 206  ]
{
[; ;main.c: 395: case 1:
"395
[e :U 207 ]
[; ;main.c: 396: WriteCommandToLCD(0x80);
"396
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 397: WriteStringToLCD("    HOUR     ");
"397
[e ( _WriteStringToLCD (1 :s 36C ]
[; ;main.c: 398: if (RA2 == 0 && h < 24) {
"398
[e $ ! && == -> _RA2 `i -> 0 `i < _h -> -> 24 `i `ui 208  ]
{
[; ;main.c: 399: h++;
"399
[e ++ _h -> -> 1 `i `ui ]
[; ;main.c: 400: WriteCommandToLCD(0xc0);
"400
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 401: WriteTempToLCD(h);
"401
[e ( _WriteTempToLCD (1 -> _h `i ]
"402
}
[e :U 208 ]
[; ;main.c: 402: }
[; ;main.c: 403: if (RA3 == 0 && h > 0) {
"403
[e $ ! && == -> _RA3 `i -> 0 `i > _h -> -> 0 `i `ui 209  ]
{
[; ;main.c: 404: h--;
"404
[e -- _h -> -> 1 `i `ui ]
[; ;main.c: 405: WriteCommandToLCD(0xc0);
"405
[e ( _WriteCommandToLCD (1 -> -> 192 `i `uc ]
[; ;main.c: 406: WriteTempToLCD(h);
"406
[e ( _WriteTempToLCD (1 -> _h `i ]
"407
}
[e :U 209 ]
[; ;main.c: 407: }
[; ;main.c: 408: break;
"408
[e $U 205  ]
[; ;main.c: 410: case 2:
"410
[e :U 210 ]
[; ;main.c: 411: WriteCommandToLCD(0x80);
"411
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 412: WriteStringToLCD("     MINUTE    ");
"412
[e ( _WriteStringToLCD (1 :s 37C ]
[; ;main.c: 413: if (RA2 == 0 && m < 60) {
"413
[e $ ! && == -> _RA2 `i -> 0 `i < _m -> -> 60 `i `ui 211  ]
{
[; ;main.c: 414: m++;
"414
[e ++ _m -> -> 1 `i `ui ]
[; ;main.c: 415: WriteCommandToLCD(0xc0 + 3);
"415
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 3 `i `uc ]
[; ;main.c: 416: WriteTempToLCD(m);
"416
[e ( _WriteTempToLCD (1 -> _m `i ]
"417
}
[e :U 211 ]
[; ;main.c: 417: }
[; ;main.c: 418: if (RA3 == 0 && m > 0) {
"418
[e $ ! && == -> _RA3 `i -> 0 `i > _m -> -> 0 `i `ui 212  ]
{
[; ;main.c: 419: m--;
"419
[e -- _m -> -> 1 `i `ui ]
[; ;main.c: 420: WriteCommandToLCD(0xc0 + 3);
"420
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 3 `i `uc ]
[; ;main.c: 421: WriteTempToLCD(m);
"421
[e ( _WriteTempToLCD (1 -> _m `i ]
"422
}
[e :U 212 ]
[; ;main.c: 422: }
[; ;main.c: 423: break;
"423
[e $U 205  ]
[; ;main.c: 424: case 3:
"424
[e :U 213 ]
[; ;main.c: 425: WriteCommandToLCD(0x80);
"425
[e ( _WriteCommandToLCD (1 -> -> 128 `i `uc ]
[; ;main.c: 426: WriteStringToLCD("    SECOND   ");
"426
[e ( _WriteStringToLCD (1 :s 38C ]
[; ;main.c: 427: if (RA2 == 0) {
"427
[e $ ! == -> _RA2 `i -> 0 `i 214  ]
{
[; ;main.c: 428: s++;
"428
[e ++ _s -> -> 1 `i `ui ]
[; ;main.c: 429: WriteCommandToLCD(0xc0 + 6);
"429
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 6 `i `uc ]
[; ;main.c: 430: WriteTempToLCD(s);
"430
[e ( _WriteTempToLCD (1 -> _s `i ]
"431
}
[e :U 214 ]
[; ;main.c: 431: }
[; ;main.c: 432: if (RA3 == 0 && s > 0) {
"432
[e $ ! && == -> _RA3 `i -> 0 `i > _s -> -> 0 `i `ui 215  ]
{
[; ;main.c: 433: s--;
"433
[e -- _s -> -> 1 `i `ui ]
[; ;main.c: 434: WriteCommandToLCD(0xc0 + 6);
"434
[e ( _WriteCommandToLCD (1 -> + -> 192 `i -> 6 `i `uc ]
[; ;main.c: 435: WriteTempToLCD(s);
"435
[e ( _WriteTempToLCD (1 -> _s `i ]
"436
}
[e :U 215 ]
[; ;main.c: 436: }
[; ;main.c: 437: break;
"437
[e $U 205  ]
"438
}
[; ;main.c: 438: }
[e $U 205  ]
"394
[e :U 206 ]
[e [\ _switch_state , $ -> -> 1 `i `ui 207
 , $ -> -> 2 `i `ui 210
 , $ -> -> 3 `i `ui 213
 205 ]
"438
[e :U 205 ]
[; ;main.c: 439: h_alarm = h;
"439
[e = _h_alarm _h ]
[; ;main.c: 440: m_alarm = m;
"440
[e = _m_alarm _m ]
[; ;main.c: 441: s_alarm = s;
"441
[e = _s_alarm _s ]
"442
}
[e :U 199 ]
"383
[e $U 200  ]
[e :U 201 ]
"443
}
[e :U 195 ]
"369
[e $U 196  ]
[e :U 197 ]
[; ;main.c: 442: }
[; ;main.c: 443: }
[; ;main.c: 445: }
"445
[e :UE 192 ]
}
[a 16C 84 72 85 0 ]
[a 28C 84 72 85 0 ]
[a 18C 83 65 84 0 ]
[a 30C 83 65 84 0 ]
[a 19C 83 85 78 0 ]
[a 31C 83 85 78 0 ]
[a 13C 77 79 78 0 ]
[a 25C 77 79 78 0 ]
[a 17C 70 82 73 0 ]
[a 29C 70 82 73 0 ]
[a 14C 84 85 69 0 ]
[a 26C 84 85 69 0 ]
[a 3C 32 32 83 69 84 84 73 78 71 32 84 73 77 69 0 ]
[a 15C 87 69 68 0 ]
[a 27C 87 69 68 0 ]
[a 2C 67 0 ]
[a 20C 63 63 63 0 ]
[a 32C 63 63 63 0 ]
[a 4C 58 0 ]
[a 5C 58 0 ]
[a 10C 58 0 ]
[a 11C 58 0 ]
[a 34C 58 0 ]
[a 35C 58 0 ]
[a 1C 84 69 77 80 58 32 0 ]
[a 24C 32 67 72 65 78 71 69 32 87 69 69 75 32 68 65 89 32 32 0 ]
[a 23C 32 32 67 72 65 78 71 69 32 89 69 65 82 32 32 0 ]
[a 8C 32 32 67 72 65 78 71 69 32 83 69 67 79 78 68 32 32 0 ]
[a 21C 32 32 67 72 65 78 71 69 32 68 65 89 32 32 32 0 ]
[a 7C 32 32 32 67 72 65 78 71 69 32 77 73 78 85 84 69 32 32 32 0 ]
[a 9C 32 32 83 69 84 84 73 78 71 32 68 65 84 69 32 32 32 0 ]
[a 38C 32 32 32 32 83 69 67 79 78 68 32 32 32 0 ]
[a 22C 32 32 32 67 72 65 78 71 69 32 77 79 78 84 72 32 32 32 32 0 ]
[a 37C 32 32 32 32 32 77 73 78 85 84 69 32 32 32 32 0 ]
[a 6C 32 32 32 67 72 65 78 71 69 32 72 79 85 82 32 32 32 32 32 0 ]
[a 36C 32 32 32 32 72 79 85 82 32 32 32 32 32 0 ]
[a 33C 32 32 32 32 32 65 76 65 82 77 32 32 32 32 32 0 ]
[a 12C 32 0 ]
